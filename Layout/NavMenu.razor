@using FE_HumanResources.Models
@inject ILocalStorageService LocalStorage
@inject NavigationManager NavigationManager
@inject HttpClient Http

<div class="top-row ps-3 navbar navbar-dark">
    <div class="container-fluid">
        <a class="navbar-brand" href="">Human Resources</a>
        <button title="Navigation menu" class="navbar-toggler" @onclick="ToggleNavMenu">
            <span class="navbar-toggler-icon"></span>
        </button>
    </div>
</div>

<div class="@NavMenuCssClass nav-scrollable" @onclick="ToggleNavMenu">
    <nav class="flex-column">
        <div class="nav-item px-3">
            <NavLink class="nav-link" href="dashboard">
                <span class="bi bi-house-door-fill-nav-menu" aria-hidden="true"></span> Dashboard
            </NavLink>
        </div>
        <div class="nav-item px-3">
            <NavLink class="nav-link" href="perfil">
                <span class="bi bi-house-door-fill-nav-menu" aria-hidden="true"></span> Mi Perfil
            </NavLink>
        </div>
        <div class="nav-item px-3">
            <button id="kt_sign_in_submit" class="btn btn-primary" @onclick="logout">cerrar sesión</button>
        </div>
    </nav>
</div>

@code {
    private UserModel userModel = null;
    private bool collapseNavMenu = true;

    private string? NavMenuCssClass => collapseNavMenu ? "collapse" : null;

    private void ToggleNavMenu()
    {
        collapseNavMenu = !collapseNavMenu;
    }

    private async void logout()
    {
        string? usr = await LocalStorage.GetItemAsync<string>("logedUser");
        if (!string.IsNullOrEmpty(usr))
        {
            userModel = JsonConvert.DeserializeObject<UserModel>(usr);

            if (userModel != null)
            {
                HttpResponseMessage response = await Http.PostAsJsonAsync("api/login/Out", new { Uuid = userModel.Uuid });

                await LocalStorage.RemoveItemAsync("logedUser");
                NavigationManager.NavigateTo("login", true);
            }
        }
        
    }

}
