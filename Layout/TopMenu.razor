@using FE_HumanResources.Entities
@using FE_HumanResources.Models
@inject ILocalStorageService LocalStorage
@inject NavigationManager NavigationManager
@inject HttpClient Http


@* <div class="rz-p-sm-12"> *@
<RadzenMenu style="margin-left: 50%;">
    @* ESPACIO *@
    @* <RadzenMenuItem Text="" Icon="" style="margin-left: 50%;">
    </RadzenMenuItem>
    <RadzenMenuItem Text="" Icon="" style="margin-left: 50%;">
    </RadzenMenuItem>
    <RadzenMenuItem Text="" Icon="" style="margin-left: 50%;">
    </RadzenMenuItem>
    <RadzenMenuItem Text="" Icon="" style="margin-left: 50%;">
    </RadzenMenuItem>
    <RadzenMenuItem Text="" Icon="" style="margin-left: 50%;">
    </RadzenMenuItem>
    <RadzenMenuItem Text="" Icon="" style="margin-left: 50%;">
    </RadzenMenuItem>
    <RadzenMenuItem Text="" Icon="" style="margin-left: 50%;">
    </RadzenMenuItem> *@
    @* ESPACIO *@
    <RadzenMenuItem Text="@username" Icon="person">
        <RadzenMenuItem Text="Mi Perfil" Path="perfil" Icon="account_circle"></RadzenMenuItem>

        <RadzenMenuItem Text="Cerrar sesiÃ³n" Click="@logout" Icon="close"></RadzenMenuItem>
    </RadzenMenuItem>
    @* PERFIL *@
</RadzenMenu>
@* </div> *@


@code {
    private UserEntity UserEntity = null;
    string username = "";

    protected override async Task OnInitializedAsync()
    {

        UserEntity = null;
        string? usr = await LocalStorage.GetItemAsync<string>("logedUser");

        if (!string.IsNullOrEmpty(usr))
        {
            UserEntity = JsonConvert.DeserializeObject<UserEntity>(usr);
            username = UserEntity.UserName + " " + UserEntity.LastName;
        }
        else
        {
            NavigationManager.NavigateTo("login", true);
        }
    }

    private async void logout()
    {
        string? usr = await LocalStorage.GetItemAsync<string>("logedUser");
        if (!string.IsNullOrEmpty(usr))
        {
            UserEntity = JsonConvert.DeserializeObject<UserEntity>(usr);
            if (UserEntity != null)
            {
                HttpResponseMessage response = await Http.PostAsJsonAsync("api/login/Out", new PayloadGeneric()
                    {
                        Uuid = UserEntity.Uuid,
                        payload = new { }
                    });

                if (response.IsSuccessStatusCode)
                {
                    await LocalStorage.ClearAsync();
                    NavigationManager.NavigateTo("login", true);

                }
                else
                {

                }
            }
        }

    }

}