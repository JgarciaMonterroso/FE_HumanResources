@page "/historicusergrid"
@using System.Net.Http.Headers
@using FE_HumanResources.Models
@inject ILocalStorageService LocalStorage
@inject NavigationManager NavigationManager
@inject IToastService toastService
@inject HttpClient Http

<div class="nav-fixed">
    <div id="layoutSidenav">
        <div id="layoutSidenav_content">
            <main>
                <div>
                    <br />
                    <RadzenDataGrid AllowFiltering="true" AllowColumnResize="true" AllowAlternatingRows="false" FilterMode="FilterMode.Advanced" 
                    AllowSorting="true" PageSize="5" AllowPaging="true" PagerHorizontalAlign="HorizontalAlign.Left" ShowPagingSummary="true"
                                    Data="@historicModel" TItem="HistoricByUser" ColumnWidth="300px" LogicalFilterOperator="LogicalFilterOperator.Or" 
                                    SelectionMode="DataGridSelectionMode.Single" @bind-Value=@selectedHistorics>
                        <Columns>
                            <RadzenDataGridColumn TItem="HistoricByUser" Property="ActionType" Filterable="false" Title="Tipo de Accion" Frozen="true" Width="80px" TextAlign="TextAlign.Center" />
                            <RadzenDataGridColumn TItem="HistoricByUser" Property="Module" Title="Modulo" Frozen="true" Width="160px" />
                            <RadzenDataGridColumn TItem="HistoricByUser" Property="Register" Title="Registro" Width="160px" />
                            <RadzenDataGridColumn TItem="HistoricByUser" Property="Date" Title="Fecha" FormatString="{0:d}" Width="200px" />
                            <RadzenDataGridColumn TItem="HistoricByUser" Property="UserName" Title="Usuario" Width="300px" />
                        </Columns>
                    </RadzenDataGrid>
                </div>
            </main>
        </div>
    </div>
</div>
@code {
    private int Count = 1;
    private HistoricByUser historic = new HistoricByUser();
    private IEnumerable<HistoricByUser> historicModel;
    private IList<HistoricByUser> selectedHistorics;

    protected override async Task OnInitializedAsync()
    {   
        await base.OnInitializedAsync();

        string? jwt = await LocalStorage.GetItemAsync<string>("jwt");
        if (!string.IsNullOrEmpty(jwt))
        {
            Http.DefaultRequestHeaders.Authorization = new AuthenticationHeaderValue("Bearer", jwt);
            HttpResponseMessage response = await Http.GetAsync("api/Historic/GetHitoricUser");
            if (response.IsSuccessStatusCode)
            {
                string content = response.Content.ReadAsStringAsync().Result;
                historicModel = JsonConvert.DeserializeObject<IEnumerable<HistoricByUser>>(content);
                if (historicModel == null)
                {
                    toastService.ShowWarning("Error al obtenerla lista de Historico");
                }
                selectedHistorics = new List<HistoricByUser>() { historicModel.FirstOrDefault() };
            }

        }
        else
        {
            await LocalStorage.ClearAsync();
            NavigationManager.NavigateTo("login", true);
        }
        


    }

    private void GoToUsers()
    {
        NavigationManager.NavigateTo("usersgrid");
    }
}
