@page "/CreateUser"
@using System.Net.Http.Headers
@using FE_HumanResources.Models
@inject ILocalStorageService LocalStorage
@inject NavigationManager NavigationManager
@inject IToastService toastService
@inject HttpClient Http

<div>
    <EditForm Model="userModel" OnValidSubmit="CreateNewUser" class="form w-100" id="kt_sign_in_form">
        <DataAnnotationsValidator />
        <div class="row">
            <div class="col">
                <div class="row">
                   <div class="col">
                            <div class="mb-3">
                                <label for="" class="form-label">Nombres</label>
                                <InputText class="form-control bg-transparent" @bind-Value="userModel.UserName" />
                                <ValidationMessage For="(()=> userModel.UserName)"></ValidationMessage>
                            </div>
                            <div class="mb-3">
                                <label for="" class="form-label">Genero</label>
                                @* //<InputText class="form-control bg-transparent" @bind-Value="userModel.Gender" /> *@
                                <InputSelect class="form-control bg-transparent" @bind-Value="userModel.Gender">
                                        <option value="Femenino">Femenino</option>
                                        <option value="Masculino">Masculino</option>
                                </InputSelect>
                            </div>
                            <div class="mb-3">
                                <label type="number" class="form-label">Documento de identificacion</label>
                                <InputText class="form-control bg-transparent" @bind-Value="userModel.Identification" />
                                <ValidationMessage For="(()=> userModel.Identification)"></ValidationMessage>
                            </div>
                            <div class="mb-3">
                                <label for="" class="form-label">Pais</label>
                                <InputText class="form-control bg-transparent" @bind-Value="userModel.Country" />
                                <ValidationMessage For="(()=> userModel.Country)"></ValidationMessage>
                            </div>
                            <div class="mb-3">
                                <label for="" class="form-label">Titulo</label>
                                <InputText class="form-control bg-transparent" @bind-Value="userModel.JobTitle" />
                                <ValidationMessage For="(()=> userModel.JobTitle)"></ValidationMessage>
                            </div>
                            <div class="mb-3">
                                <label for="" class="form-label">Direccion</label>
                                <InputText class="form-control bg-transparent" @bind-Value="userModel.Adress" />
                                <ValidationMessage For="(()=> userModel.Adress)"></ValidationMessage>
                            </div>
                            <div class="mb-3">
                                <label for="" class="form-label">Contraseña</label>
                                <InputText type="password" class="form-control bg-transparent" @bind-Value="userModel.Password"/>
                                <ValidationMessage For="(()=> userModel.Password)"></ValidationMessage>
                            </div>
                    </div>
                    <div class="col">
                        <div class="mb-3">
                            <label for="" class="form-label">Apellidos</label>
                            <InputText class="form-control bg-transparent" @bind-Value="userModel.LastName" />
                            <ValidationMessage For="(()=> userModel.LastName)"></ValidationMessage>
                        </div>
                        <div class="mb-3">
                            <label for="" class="form-label">Telefono</label>
                            <InputNumber class="form-control bg-transparent" @bind-Value="userModel.Phone" />
                            <ValidationMessage For="(()=> userModel.Phone)"></ValidationMessage>
                        </div>
                        <div class="mb-3">
                            <label for="" class="form-label">Correo</label>
                            <InputText class="form-control bg-transparent" @bind-Value="userModel.Email" />
                            <ValidationMessage For="(()=> userModel.Email)"></ValidationMessage>
                        </div>
                        <div class="mb-3">
                            <label for="" class="form-label">Departamento</label>
                            <InputText class="form-control bg-transparent" @bind-Value="userModel.Department" />
                            <ValidationMessage For="(()=> userModel.Department)"></ValidationMessage>
                        </div>
                        <div class="mb-3">
                            <label for="" class="form-label">Fecha de nacimiento</label>
                            <InputDate class="form-control bg-transparent" @bind-Value="userModel.DateOfBirth" />
                            <ValidationMessage For="(()=> userModel.DateOfBirth)"></ValidationMessage>
                        </div>
                        <div class="mb-3">
                            <label for="" class="form-label">Fotografia</label>
                            <InputText class="form-control bg-transparent" @bind-Value="userModel.Picture" />
                            <ValidationMessage For="(()=> userModel.Picture)"></ValidationMessage>
                        </div>
                    </div>
                </div>
            </div>
            <div class="col">
                <div class="row">
                    <div class="col">
                        <div class="d-grid mb-10">
                            <button id="kt_sign_in_submit" class="btn btn-success" type="submit">Guardar</button>
                        </div>
                        <div class="d-grid mb-10">
                            <button class="btn btn-danger" @onclick="() => ReturnMenu()">Cancelar</button>
                        </div>
                    </div>
                    <div class="col">

                    </div>
                </div>
            </div>
        </div>
    </EditForm>
</div>
<hr />

@code {
    [Parameter]
    public string uuid { get; set; }
    private UserModel userModel = new UserModel();

    protected override async Task OnInitializedAsync()
    {
        string? jwt = await LocalStorage.GetItemAsync<string>("jwt");
        if (userModel != null && !string.IsNullOrEmpty(jwt))
        {
            Http.DefaultRequestHeaders.Authorization = new AuthenticationHeaderValue("Bearer", jwt);
            HttpResponseMessage response = await Http.PostAsJsonAsync("api/User/GetUser", new { Uuid = uuid });
            if (response.IsSuccessStatusCode)
            {
                string content = response.Content.ReadAsStringAsync().Result;
                userModel = JsonConvert.DeserializeObject<UserModel>(content);
                if (userModel == null)
                {
                    toastService.ShowWarning("Error al obtenerla lista de Usuarios");
                }
            }
        }
        else
        {
            NavigationManager.NavigateTo("login", true);
        }
    }

    private async void CreateNewUser()
    {
        string? jwt = await LocalStorage.GetItemAsync<string>("jwt");
        string? uuidUserLoged = await LocalStorage.GetItemAsync<string>("uuidUser");

        if (userModel != null && !string.IsNullOrEmpty(jwt))
        {
            Http.DefaultRequestHeaders.Authorization = new AuthenticationHeaderValue("Bearer", jwt);
            HttpResponseMessage response = await Http.PostAsJsonAsync("api/User/CreateUser", new PayloadGeneric(){
                Uuid = uuidUserLoged!,
                payload = userModel
            });
            if (response.IsSuccessStatusCode)
            {
                string content = response.Content.ReadAsStringAsync().Result;
                UserModel? createdUser = JsonConvert.DeserializeObject<UserModel>(content);
                if (createdUser != null)
                {
                    string messageInfo = $"Se agrego la información con exito";
                    toastService.ShowSuccess(messageInfo);
                }
                userModel = new UserModel();
            }
            else
            {
                string messageInfo = $"Perdon algo salio mal";
                toastService.ShowError(messageInfo);
            }
        }
    }

    private void ReturnMenu()
    {
        uuid = "";
        NavigationManager.NavigateTo($"usersgrid", true);
    }
}